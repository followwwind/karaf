<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.wind</groupId>
		<artifactId>karaf</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>karaf-bundle</artifactId>
	<packaging>pom</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<osgi.version>6.0.0</osgi.version>
		<lucene-version>5.5.0</lucene-version>
		<spring.version>4.0.3.RELEASE</spring.version>
		<jetty.version>9.2.15.v20160210</jetty.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>${osgi.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>5.0.0</version>
		</dependency>
	</dependencies>

	<modules>
		<module>resources-bundle</module>
	  	<module>sample-bundle</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>3.0.0</version>
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<executions>
						<execution>
							<id>copy-resources</id>
							<!-- 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 -->
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<!-- 指定resources插件处理资源文件到哪个目录下 -->
								<outputDirectory>${project.build.outputDirectory}</outputDirectory>
								<!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
								<!-- 待处理的资源定义 -->
								<resources>
									<resource>
										<!-- 指定resources插件处理哪个目录下的资源文件 -->
										<directory>src/main/*</directory>
										<!-- 指定不需要处理的资源
										<excludes>
											<exclude>WEB-INF/*.*</exclude>
										</excludes> -->
										<!-- 是否对待处理的资源开启过滤模式 (resources插件的copy-resources目标也有资源过滤的功能，
										这里配置的这个功能的效果跟<build><resources><resource>下配置的资源过滤是一样的，
										只不过可能执行的阶段不一样， 这里执行的阶段是插件指定的validate阶段，<build>
										<resources><resource>下的配置将是在resources插件的resources目标执行时起作用
										（在process-resources阶段）) -->
										<filtering>false</filtering>
									</resource>
								</resources>
							</configuration>
							<!--<inherited></inherited>-->
						</execution>
					</executions>

				</plugin>
			</plugins>
		</pluginManagement>
	</build>
  
</project>